{"version":3,"sources":["icons_FEtask/profile.svg","icons_FEtask/To-do.svg","icons_FEtask/3 dot menu.svg","icons_FEtask/add.svg","icons_FEtask/SVG - Urgent Priority grey.svg","icons_FEtask/No-priority.svg","icons_FEtask/SVG - Urgent Priority colour.svg","icons_FEtask/Img - High Priority.svg","icons_FEtask/Img - Medium Priority.svg","icons_FEtask/Img - Low Priority.svg","icons_FEtask/Backlog.svg","icons_FEtask/in-progress.svg","icons_FEtask/Display.svg","icons_FEtask/down.svg","Card.js","KanbanBoard.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Card","_ref","ticket","id","title","tag","React","createElement","className","src","ProfileIcon","alt","anotherIcon","dot","KanbanBoard","tickets","users","grouping","ordering","sortTickets","sort","a","b","priority","localeCompare","groupedTickets","reduce","acc","status","push","userId","groupTickets","map","user","userTickets","filter","length","name","photo","find","u","getUserDetails","key","AddIcon","ThreeDotIcon","Object","entries","_ref2","groupKey","group","ToDoIcon","InProgressIcon","BacklogIcon","renderStatusIcon","NoPriorityIcon","UrgentIcon","HighIcon","MediumIcon","LowIcon","renderPriorityIcon","App","setTickets","useState","setUsers","setGrouping","setOrdering","showDisplayOptions","setShowDisplayOptions","useEffect","async","response","fetch","data","json","error","console","fetchData","onClick","toggleDisplayOptions","prev","displayIcon","downIcon","value","onChange","e","target","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.262072c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.07d5a75c.svg\";","module.exports = __webpack_public_path__ + \"static/media/To-do.991aa8ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/3 dot menu.6c272d9d.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.a19048c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/SVG - Urgent Priority grey.8703a249.svg\";","module.exports = __webpack_public_path__ + \"static/media/No-priority.0d2cbadc.svg\";","module.exports = __webpack_public_path__ + \"static/media/SVG - Urgent Priority colour.4eca8404.svg\";","module.exports = __webpack_public_path__ + \"static/media/Img - High Priority.10cfcedf.svg\";","module.exports = __webpack_public_path__ + \"static/media/Img - Medium Priority.861ebea5.svg\";","module.exports = __webpack_public_path__ + \"static/media/Img - Low Priority.2ad281d3.svg\";","module.exports = __webpack_public_path__ + \"static/media/Backlog.47973b09.svg\";","module.exports = __webpack_public_path__ + \"static/media/in-progress.6f7f6c8e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Display.b96d92a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/down.990a9026.svg\";","import React from 'react';\r\nimport './Card.css'; \r\nimport dot from './icons_FEtask/To-do.svg'; \r\nimport anotherIcon from './icons_FEtask/SVG - Urgent Priority grey.svg'; \r\nimport ProfileIcon from './icons_FEtask/profile.svg'; \r\n\r\nconst Card = ({ ticket }) => {\r\n  const { id, title, tag } = ticket; \r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"profile-container\">\r\n        <img src={ProfileIcon} alt=\"Profile\" className=\"profile-image\" /> \r\n      </div>\r\n      <h3 className=\"ticket-id\">ID: {id}</h3>\r\n      <p className=\"ticket-title\">{title}</p>\r\n      <div className=\"tag-container\">\r\n        <div className=\"icon-box\">\r\n          <img src={anotherIcon} alt=\"Another Icon\" className=\"another-icon\" />\r\n        </div>\r\n        <div className=\"tag-box\">\r\n          <img src={dot} alt=\"Dot\" className=\"dot-icon\" />\r\n          <span className=\"tag\">{tag}</span> \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\nimport './KanbanBoard.css';\r\n\r\nimport NoPriorityIcon from './icons_FEtask/No-priority.svg';\r\nimport UrgentIcon from './icons_FEtask/SVG - Urgent Priority colour.svg';\r\nimport HighIcon from './icons_FEtask/Img - High Priority.svg';\r\nimport MediumIcon from './icons_FEtask/Img - Medium Priority.svg';\r\nimport LowIcon from './icons_FEtask/Img - Low Priority.svg';\r\nimport ProfileIcon from './icons_FEtask/profile.svg'; \r\nimport ThreeDotIcon from './icons_FEtask/3 dot menu.svg'; \r\nimport AddIcon from './icons_FEtask/add.svg'; \r\nimport BacklogIcon from './icons_FEtask/Backlog.svg';\r\nimport ToDoIcon from './icons_FEtask/To-do.svg';\r\nimport InProgressIcon from './icons_FEtask/in-progress.svg';\r\n\r\nconst KanbanBoard = ({ tickets, users, grouping, ordering }) => {\r\n  const groupTickets = (tickets) => {\r\n    let groupedTickets;\r\n\r\n    if (grouping === 'Status') {\r\n      groupedTickets = tickets.reduce((acc, ticket) => {\r\n        acc[ticket.status] = acc[ticket.status] || [];\r\n        acc[ticket.status].push(ticket);\r\n        return acc;\r\n      }, {});\r\n    } else if (grouping === 'User') {\r\n      groupedTickets = tickets.reduce((acc, ticket) => {\r\n        acc[ticket.userId] = acc[ticket.userId] || [];\r\n        acc[ticket.userId].push(ticket);\r\n        return acc;\r\n      }, {});\r\n    } else if (grouping === 'Priority') {\r\n      groupedTickets = tickets.reduce((acc, ticket) => {\r\n        let priority;\r\n        switch (ticket.priority) {\r\n          case 0:\r\n            priority = 'No Priority';\r\n            break;\r\n          case 1:\r\n            priority = 'Urgent';\r\n            break;\r\n          case 2:\r\n            priority = 'High';\r\n            break;\r\n          case 3:\r\n            priority = 'Medium';\r\n            break;\r\n          case 4:\r\n            priority = 'Low';\r\n            break;\r\n          default:\r\n            priority = 'No Priority';\r\n        }\r\n\r\n        acc[priority] = acc[priority] || [];\r\n        acc[priority].push(ticket);\r\n        return acc;\r\n      }, {});\r\n    }\r\n\r\n    return groupedTickets;\r\n  };\r\n\r\n  const sortTickets = (tickets) => {\r\n    if (ordering === 'Priority') {\r\n      return tickets.sort((a, b) => b.priority - a.priority);\r\n    } else if (ordering === 'Title') {\r\n      return tickets.sort((a, b) => a.title.localeCompare(b.title));\r\n    }\r\n    return tickets;\r\n  };\r\n\r\n  const groupedTickets = groupTickets(tickets);\r\n\r\n  const renderStatusIcon = (status) => {\r\n    switch (status) {\r\n      case 'To Do':\r\n        return <img src={ToDoIcon} alt=\"To Do\" className=\"status-icon\" />;\r\n      case 'In Progress':\r\n        return <img src={InProgressIcon} alt=\"In Progress\" className=\"status-icon\" />;\r\n      case 'Backlog':\r\n        return <img src={BacklogIcon} alt=\"Backlog\" className=\"status-icon\" />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const renderPriorityIcon = (priority) => {\r\n    switch (priority) {\r\n      case 'No Priority':\r\n        return <img src={NoPriorityIcon} alt=\"No Priority\" className=\"priority-icon\" />;\r\n      case 'Urgent':\r\n        return <img src={UrgentIcon} alt=\"Urgent\" className=\"priority-icon\" />;\r\n      case 'High':\r\n        return <img src={HighIcon} alt=\"High\" className=\"priority-icon\" />;\r\n      case 'Medium':\r\n        return <img src={MediumIcon} alt=\"Medium\" className=\"priority-icon\" />;\r\n      case 'Low':\r\n        return <img src={LowIcon} alt=\"Low\" className=\"priority-icon\" />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const getUserDetails = (userId) => {\r\n    const user = users.find(u => u.id === userId);\r\n    return user ? { name: user.name, photo: user.photo } : { name: 'Unknown', photo: ProfileIcon };\r\n  };\r\n\r\n  return (\r\n    <div className=\"kanban-board\">\r\n      {grouping === 'User' ? (\r\n        users.map(user => {\r\n          const userTickets = tickets.filter(ticket => ticket.userId === user.id);\r\n          if (userTickets.length === 0) return null;\r\n          const { name, photo } = getUserDetails(user.id);\r\n          return (\r\n            <div key={user.id} className=\"ticket-group\">\r\n              <h2 className=\"user-heading\">\r\n                <img src={ProfileIcon} alt=\"Profile Icon\" className=\"profile-icon\" />\r\n                {photo && <img src={photo} alt={name} className=\"user-photo\" />}\r\n                {name}\r\n                <img src={AddIcon} alt=\"Add Ticket\" className=\"action-icon\" /> {/* Moved Add icon here */}\r\n                <img src={ThreeDotIcon} alt=\"More Options\" className=\"action-icon\" />\r\n                <span className=\"ticket-count\">{userTickets.length}</span>\r\n              </h2>\r\n              {sortTickets(userTickets).map(ticket => (\r\n                <Card key={ticket.id} ticket={ticket} users={users} />\r\n              ))}\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        Object.entries(groupedTickets).map(([groupKey, group]) => (\r\n          <div key={groupKey} className=\"ticket-group\">\r\n            <h2 className=\"priority-heading\">\r\n              {grouping === 'Status' ? renderStatusIcon(groupKey) : renderPriorityIcon(groupKey)}\r\n              <span className={grouping === 'Status' ? \"status-name\" : \"priority-name\"}>{groupKey}</span>\r\n              <span className=\"ticket-count\">{group.length}</span>\r\n              <img src={AddIcon} alt=\"Add Ticket\" className=\"action-icon\" /> {/* Moved Add icon here */}\r\n              <img src={ThreeDotIcon} alt=\"More Options\" className=\"action-icon\" />\r\n            </h2>\r\n            {sortTickets(group).map(ticket => (\r\n              <Card key={ticket.id} ticket={ticket} users={users} />\r\n            ))}\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanBoard;\r\n","import React, { useEffect, useState } from 'react';\nimport KanbanBoard from './KanbanBoard';\nimport './App.css';\n// Import the display and down icons\nimport displayIcon from './icons_FEtask/Display.svg'; // Update the path based on your project structure\nimport downIcon from './icons_FEtask/down.svg'; // Update the path based on your project structure\n\nconst App = () => {\n  const [tickets, setTickets] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [grouping, setGrouping] = useState('Status'); // Default grouping by Status\n  const [ordering, setOrdering] = useState('Priority'); // Default ordering by Priority\n  const [showDisplayOptions, setShowDisplayOptions] = useState(false); // To show/hide the display dropdown\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\n        const data = await response.json();\n        setTickets(data.tickets);\n        setUsers(data.users);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  // Toggle the display dropdown\n  const toggleDisplayOptions = () => {\n    setShowDisplayOptions((prev) => !prev);\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <div className=\"display-container\">\n          <button className=\"display-button\" onClick={toggleDisplayOptions}>\n            <img src={displayIcon} alt=\"Display Icon\" className=\"display-icon\" /> \n            Display\n            <img src={downIcon} alt=\"Dropdown Icon\" className=\"down-icon\" /> \n          </button>\n          {showDisplayOptions && (\n            <div className=\"dropdown-content\">\n              <div className=\"grouping-option\">\n                <label>\n                  Grouping\n                  <select value={grouping} onChange={(e) => setGrouping(e.target.value)}>\n                    <option value=\"Status\">Status</option>\n                    <option value=\"User\">User</option>\n                    <option value=\"Priority\">Priority</option>\n                  </select>\n                </label>\n              </div>\n              <div className=\"ordering-option\">\n                <label>\n                  Ordering\n                  <select value={ordering} onChange={(e) => setOrdering(e.target.value)}>\n                    <option value=\"Priority\">Priority</option>\n                    <option value=\"Title\">Title</option>\n                  </select>\n                </label>\n              </div>\n            </div>\n          )}\n        </div>\n      </header>\n      <KanbanBoard tickets={tickets} users={users} grouping={grouping} ordering={ordering} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}